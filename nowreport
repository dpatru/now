#!/usr/bin/perl -wslan
# expects output from nowtss
# prints report everytime a blank line is encountered.
# use -v to echa the lines
# use -m to report in minutes
# use -a to print all aggregates
# use -e to only select tasks with estimates

BEGIN { 
  no warnings 'once';
  # my (%report, $date, @dates); 
  # our %report = (); our $date; our @dates; 
  sub print_report {
    #print '';
    # print 'dates: ', join(' ', @dates);
    my ($d1, $d2) = @dates[0, $#dates];
    print "Report for $d1", $d1 ne $d2? " - $d2": "";
    #print %report;
    foreach my $k (sort keys %report) {
      foreach my $entry (@{ $report{$k} }) {
	# print "entry $entry;";
	my ($estimate, $actuals);
	if (!(($estimate, $actuals) = ($entry =~ /^([\d\.]+)\s*\/\s*(.*)$/))){
	  $actuals = $entry;
	  $estimate = '';
	}
	# print "entry $entry; estimate $estimate; actuals $actuals";
	next if $e && $estimate eq ''; # only process estimates
	my $sum = 0;
	foreach my $act (split /\s+/, $actuals) { 
	  $sum += $act if $act;
	}
	if ($estimate eq '') {
	  printf("%.02f/ %s\n", $sum, $k);
	}
	else {
	  printf("%.02f/%.02f %s\n", $sum, $estimate, $k);
	}
      }
    }
    print '';
  }    
}
no warnings 'once';
print if $v; 
# $date; # squash warning
if ($date && $_ eq '') {
  # print 'before dates: ', join(' ', @dates);
  &print_report();
  %report = ();
  @dates = ();
}
elsif (($date, $actual, $estimate, $text) = 
       /^([\d\-]+) (?:[\d\:]+) ([\d\.]+)\/([\d\.]*) (.*)$/) {
  push @dates, $date;
  chomp($text);
  if ($estimate eq '') { # no new estimate, add to latest
    if (! $report{$text}) { $report{$text} = []; }
    if ($#{ $report{$text} } >= 0) { # this text has entries
      $report{$text}[$#{ $report{$text} }] .= " $actual";
    }
    else { # no entries for this text so far
      push @{ $report{$text} }, "$actual";
    }
  }
  else { # estimate exists, make a new entry
    push @{ $report{$text} }, "$estimate / $actual";
  }
  #print "text $text; report[text] @{ $report{$text} };";
  if ($a) {
    $report{''} += $actual;
    my @tags = split /:/, $text;
    for (my $i = 0; $i < $#tags; $i++) {
      my $k = join(':', @tags[0..$i]);
      if (! $report{$k}) { $report{$k} = []; }
      if ( $#{ $report{$k} } < 0 ) { push @{ $report{$k} }, ''; }
      $report{$k}[$#{$report{$k}}] .= " $actual";
    }
  }
}

END {
  if ($#dates >= 0) {
    print '' if $v;
    &print_report();
  }
}
